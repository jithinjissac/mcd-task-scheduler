"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/pdfUtils.ts":
/*!*******************************!*\
  !*** ./src/utils/pdfUtils.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generatePDF: () => (/* binding */ generatePDF),\n/* harmony export */   printSchedule: () => (/* binding */ printSchedule)\n/* harmony export */ });\n/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspdf */ \"(app-pages-browser)/./node_modules/jspdf/dist/jspdf.es.min.js\");\n\nconst generatePDF = (assignments, employees, layouts, selectedDate)=>{\n    try {\n        const pdf = new jspdf__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            orientation: 'landscape',\n            unit: 'mm',\n            format: 'a4'\n        });\n        const pageWidth = pdf.internal.pageSize.getWidth();\n        const pageHeight = pdf.internal.pageSize.getHeight();\n        const margin = 15;\n        const headerHeight = 20;\n        const footerHeight = 15;\n        const contentHeight = pageHeight - headerHeight - footerHeight - 2 * margin;\n        // Helper function to add header to page\n        const addHeader = (pageTitle, date)=>{\n            // Make title more prominent with larger font and better positioning\n            pdf.setFontSize(20);\n            pdf.setFont('helvetica', 'bold');\n            pdf.text(\"McDonald's Station/Task Schedule\", margin, margin + 10);\n            // Make date and schedule name prominent\n            pdf.setFontSize(16);\n            pdf.setFont('helvetica', 'bold');\n            pdf.text(pageTitle, margin, margin + 22);\n            pdf.setFontSize(14);\n            pdf.setFont('helvetica', 'bold');\n            pdf.text(\"Date: \".concat(date.toLocaleDateString()), pageWidth - margin - 80, margin + 10);\n            pdf.setFontSize(12);\n            pdf.setFont('helvetica', 'normal');\n            pdf.text(\"Generated: \".concat(new Date().toLocaleString()), pageWidth - margin - 80, margin + 22);\n            // Draw line under header\n            pdf.setLineWidth(0.5);\n            pdf.line(margin, margin + headerHeight + 5, pageWidth - margin, margin + headerHeight + 5);\n        };\n        // Helper function to add footer to page\n        const addFooter = (pageNumber)=>{\n            const footerY = pageHeight - margin - 5;\n            // Draw line above footer\n            pdf.setLineWidth(0.5);\n            pdf.line(margin, footerY - 10, pageWidth - margin, footerY - 10);\n            pdf.setFontSize(10);\n            pdf.setFont('helvetica', 'normal');\n            pdf.text(\"Printed by: McDonald's Task Scheduler - Burgernomics\", margin, footerY);\n            pdf.text(\"Page \".concat(pageNumber), pageWidth - margin - 20, footerY);\n        };\n        // Helper function to add shift manager section with actual assignments and shift times\n        const addShiftManagerSection = (y, dayPartAssignments)=>{\n            var _dayPartAssignments_shift_manager;\n            const shiftManagerAssignments = (dayPartAssignments === null || dayPartAssignments === void 0 ? void 0 : (_dayPartAssignments_shift_manager = dayPartAssignments['shift_manager']) === null || _dayPartAssignments_shift_manager === void 0 ? void 0 : _dayPartAssignments_shift_manager['Manager on Duty']) || [];\n            pdf.setFontSize(14);\n            pdf.setFont('helvetica', 'bold');\n            if (shiftManagerAssignments.length > 0) {\n                const managerName = shiftManagerAssignments[0]; // Get first assigned manager\n                const manager = employees.find((emp)=>emp.name === managerName);\n                let managerText = \"Shift Manager: \".concat(managerName);\n                // Add shift times if available\n                if ((manager === null || manager === void 0 ? void 0 : manager.shiftStart) && (manager === null || manager === void 0 ? void 0 : manager.shiftEnd)) {\n                    managerText += \" (\".concat(manager.shiftStart, \"-\").concat(manager.shiftEnd, \")\");\n                }\n                // Add minor indicator if applicable\n                if (manager === null || manager === void 0 ? void 0 : manager.minor) {\n                    managerText += ' (Minor)';\n                }\n                pdf.text(managerText, margin, y);\n            } else {\n                pdf.text('Shift Manager: ________________', margin, y);\n            }\n            return y + 12;\n        };\n        // Helper function to draw a station box\n        const drawStationBox = (x, y, width, height, title, columns, stationId, dayPartAssignments)=>{\n            // Draw station title box\n            pdf.setLineWidth(0.5);\n            pdf.rect(x, y, width, 8, 'S');\n            pdf.setFontSize(12);\n            pdf.setFont('helvetica', 'bold');\n            // Center the title text\n            const textWidth = pdf.getTextWidth(title);\n            const textX = x + (width - textWidth) / 2;\n            pdf.text(title, textX, y + 5.5);\n            let currentY = y + 8;\n            // Draw column boxes with labels and values on same line\n            columns.forEach((column)=>{\n                var _dayPartAssignments_stationId;\n                const columnAssignments = (dayPartAssignments === null || dayPartAssignments === void 0 ? void 0 : (_dayPartAssignments_stationId = dayPartAssignments[stationId]) === null || _dayPartAssignments_stationId === void 0 ? void 0 : _dayPartAssignments_stationId[column]) || [];\n                const columnBoxHeight = Math.max(12, columnAssignments.length * 4 + 8); // Reduced height since text is on same line\n                pdf.rect(x, currentY, width, columnBoxHeight, 'S');\n                // Column title on the left side\n                pdf.setFont('helvetica', 'bold');\n                pdf.setFontSize(12);\n                pdf.text(column + \":\", x + 2, currentY + 6);\n                // Add employee names with shift times on the same line, starting after the column title\n                const titleWidth = pdf.getTextWidth(column + \": \");\n                let textX = x + titleWidth + 4;\n                let textY = currentY + 6;\n                columnAssignments.forEach((employeeName, index)=>{\n                    const employee = employees.find((emp)=>emp.name === employeeName);\n                    let text = employeeName;\n                    if (employee === null || employee === void 0 ? void 0 : employee.minor) {\n                        text += ' (M)';\n                    }\n                    // Add actual shift time if available\n                    if ((employee === null || employee === void 0 ? void 0 : employee.shiftStart) && (employee === null || employee === void 0 ? void 0 : employee.shiftEnd)) {\n                        text += \" - \".concat(employee.shiftStart, \"-\").concat(employee.shiftEnd);\n                    } else {\n                        text += ' - 6:00-14:00'; // Default time\n                    }\n                    pdf.setFont('helvetica', 'normal');\n                    pdf.setFontSize(14); // Increased from 12 to 14 for better readability\n                    // Check if text fits on current line, if not move to next line\n                    const employeeTextWidth = pdf.getTextWidth(text);\n                    if (textX + employeeTextWidth > x + width - 2) {\n                        textY += 5; // Increased line spacing for larger font\n                        textX = x + 2;\n                    }\n                    pdf.text(text, textX, textY);\n                    textX += employeeTextWidth + 8; // Add some spacing between names\n                });\n                currentY += columnBoxHeight;\n            });\n            return currentY;\n        };\n        // Helper function to draw DFS section (informational text only)\n        const drawDFSSection = (x, y, width)=>{\n            const title = \"DFS discards and Calibrations\";\n            const columns = [\n                \"Item\",\n                \"Day\"\n            ];\n            const dfsItems = [\n                {\n                    label: \"milk and hot chocolate discard\",\n                    day: \"Monday\"\n                },\n                {\n                    label: \"Shakes, sunday and topping discard\",\n                    day: \"Tuesday\"\n                },\n                {\n                    label: \"Oil drop temperatures recorded\",\n                    day: \"Wednesday\"\n                },\n                {\n                    label: \"Muffin, Toaster calibration\",\n                    day: \"Friday\"\n                },\n                {\n                    label: \"Egg cookers calibrations\",\n                    day: \"Sunday\"\n                }\n            ];\n            // Draw title box\n            pdf.setLineWidth(0.5);\n            pdf.rect(x, y, width, 8, 'S');\n            pdf.setFontSize(12);\n            pdf.setFont('helvetica', 'bold');\n            // Center the title text\n            const textWidth = pdf.getTextWidth(title);\n            const textX = x + (width - textWidth) / 2;\n            pdf.text(title, textX, y + 5.5);\n            let currentY = y + 8;\n            const columnWidth = width / 2; // Two columns: Item and Day\n            // Draw column headers\n            columns.forEach((column, index)=>{\n                const colX = x + index * columnWidth;\n                pdf.rect(colX, currentY, columnWidth, 6, 'S');\n                pdf.setFont('helvetica', 'bold');\n                pdf.setFontSize(12);\n                const colTextWidth = pdf.getTextWidth(column);\n                const colTextX = colX + (columnWidth - colTextWidth) / 2;\n                pdf.text(column, colTextX, currentY + 4);\n            });\n            currentY += 6;\n            // Draw content rows with DFS items and days\n            dfsItems.forEach((item, rowIndex)=>{\n                // Item column\n                pdf.rect(x, currentY, columnWidth, 8, 'S');\n                pdf.setFont('helvetica', 'normal');\n                pdf.setFontSize(12);\n                const lines = pdf.splitTextToSize(item.label, columnWidth - 4);\n                pdf.text(lines, x + 2, currentY + 5);\n                // Day column with the day value\n                pdf.rect(x + columnWidth, currentY, columnWidth, 8, 'S');\n                pdf.setFont('helvetica', 'normal');\n                pdf.setFontSize(12);\n                pdf.text(item.day, x + columnWidth + 2, currentY + 5);\n                currentY += 8;\n            });\n            return currentY;\n        };\n        // Generate Breakfast page (first page)\n        if (assignments['Breakfast']) {\n            // Add header\n            addHeader('Breakfast Schedule', selectedDate);\n            // Add shift manager section\n            let currentY = margin + headerHeight + 10;\n            const breakfastAssignments = assignments['Breakfast'] || {};\n            currentY = addShiftManagerSection(currentY, breakfastAssignments);\n            currentY += 5;\n            // Left column stations\n            let leftY = currentY;\n            const leftX = margin;\n            const stationWidth = 85;\n            // Handheld\n            leftY = drawStationBox(leftX, leftY, stationWidth, 25, \"Handheld\", [\n                \"Staff\"\n            ], \"handheld\", breakfastAssignments) + 5;\n            // Window 1\n            leftY = drawStationBox(leftX, leftY, stationWidth, 35, \"Window 1\", [\n                \"Order Taker\",\n                \"Cashier\"\n            ], \"window1\", breakfastAssignments) + 5;\n            // Window 2\n            leftY = drawStationBox(leftX, leftY, stationWidth, 60, \"Window 2\", [\n                \"Presenter\",\n                \"Checker\",\n                \"Runner\",\n                \"Holds\"\n            ], \"window2\", breakfastAssignments) + 5;\n            // Front Hand Wash\n            leftY = drawStationBox(leftX, leftY, stationWidth, 25, \"Front Hand Wash\", [\n                \"Staff\"\n            ], \"front_hand_wash\", breakfastAssignments) + 5;\n            // Order Assembly\n            leftY = drawStationBox(leftX, leftY, stationWidth, 75, \"Order Assembly\", [\n                \"1. R/P\",\n                \"2. R/P\",\n                \"3. Delivery checker\",\n                \"4. Expeditator\",\n                \"5. Delivery Drinks\"\n            ], \"order_assembly\", breakfastAssignments) + 5;\n            // Middle column stations\n            let middleY = currentY;\n            const middleX = leftX + stationWidth + 10;\n            // Kitchen Leader/Hand Wash\n            middleY = drawStationBox(middleX, middleY, stationWidth, 25, \"Kitchen Leader/Hand Wash\", [\n                \"Staff\"\n            ], \"kitchen_leader\", breakfastAssignments) + 5;\n            // Line 1\n            middleY = drawStationBox(middleX, middleY, stationWidth, 35, \"Line 1\", [\n                \"Screen\",\n                \"Rolls\"\n            ], \"line1\", breakfastAssignments) + 5;\n            // Line 2\n            middleY = drawStationBox(middleX, middleY, stationWidth, 35, \"Line 2\", [\n                \"Screen\",\n                \"Rolls\"\n            ], \"line2\", breakfastAssignments) + 5;\n            // Batch\n            middleY = drawStationBox(middleX, middleY, stationWidth, 45, \"Batch\", [\n                \"Muffins\",\n                \"Sausage\",\n                \"Eggs\"\n            ], \"batch\", breakfastAssignments) + 5;\n            // Oven\n            middleY = drawStationBox(middleX, middleY, stationWidth, 25, \"Oven\", [\n                \"Staff\"\n            ], \"oven\", breakfastAssignments) + 5;\n            // Backroom/Change Over\n            middleY = drawStationBox(middleX, middleY, stationWidth, 25, \"Backroom/Change Over\", [\n                \"Staff\"\n            ], \"backroom\", breakfastAssignments) + 5;\n            // Hash browns\n            drawStationBox(middleX, middleY, stationWidth, 25, \"Hash browns\", [\n                \"Staff\"\n            ], \"hash_browns\", breakfastAssignments);\n            // Right column stations\n            let rightY = currentY;\n            const rightX = middleX + stationWidth + 10;\n            // Customer Care\n            rightY = drawStationBox(rightX, rightY, stationWidth, 25, \"Customer Care\", [\n                \"Staff\"\n            ], \"customer_care\", breakfastAssignments) + 5;\n            // Beverage Cell\n            rightY = drawStationBox(rightX, rightY, stationWidth, 45, \"Beverage Cell\", [\n                \"Soft Drinks\",\n                \"Shakes\",\n                \"Hot Drinks\"\n            ], \"beverage_cell\", breakfastAssignments) + 5;\n            // Breaks\n            rightY = drawStationBox(rightX, rightY, stationWidth, 35, \"Breaks\", [\n                \"Kitchen\",\n                \"Front\"\n            ], \"breaks\", breakfastAssignments) + 5;\n            // DIVE\n            rightY = drawStationBox(rightX, rightY, stationWidth, 35, \"DIVE\", [\n                \"09:00\",\n                \"11:00\"\n            ], \"dive\", breakfastAssignments) + 5;\n            // DFS discards and Calibrations\n            drawDFSSection(rightX, rightY, stationWidth);\n            // Add footer\n            addFooter(1);\n        }\n        // Generate Day Part 1 page\n        if (assignments['Day Part 1']) {\n            // Add new page if Breakfast exists\n            if (assignments['Breakfast']) {\n                pdf.addPage();\n            }\n            // Add header\n            addHeader('Day Part 1 Schedule', selectedDate);\n            // Add shift manager section\n            let currentY = margin + headerHeight + 10;\n            const dayPart1Assignments = assignments['Day Part 1'] || {};\n            currentY = addShiftManagerSection(currentY, dayPart1Assignments);\n            currentY += 5;\n            // Left column stations\n            let leftY = currentY;\n            const leftX = margin;\n            const stationWidth = 85;\n            // Handheld\n            leftY = drawStationBox(leftX, leftY, stationWidth, 30, \"Handheld\", [\n                \"Staff\"\n            ], \"handheld\", dayPart1Assignments) + 5;\n            // Window 1\n            leftY = drawStationBox(leftX, leftY, stationWidth, 30, \"Window 1\", [\n                \"Order Taker\",\n                \"Cashier\"\n            ], \"window1\", dayPart1Assignments) + 5;\n            // Window 2\n            leftY = drawStationBox(leftX, leftY, stationWidth, 50, \"Window 2\", [\n                \"Presenter\",\n                \"Checker\",\n                \"Runner\",\n                \"Holds\"\n            ], \"window2\", dayPart1Assignments) + 5;\n            // Front Hand Wash\n            leftY = drawStationBox(leftX, leftY, stationWidth, 25, \"Front Hand Wash\", [\n                \"Staff\"\n            ], \"front_hand_wash\", dayPart1Assignments) + 5;\n            // Order Assembly\n            drawStationBox(leftX, leftY, stationWidth, 70, \"Order Assembly\", [\n                \"1. R/P\",\n                \"2. R/P\",\n                \"3. Delivery checker\",\n                \"4. Expeditator\",\n                \"5. Delivery Drinks\"\n            ], \"order_assembly\", dayPart1Assignments);\n            // Middle column stations\n            let middleY = currentY;\n            const middleX = leftX + stationWidth + 10;\n            // Kitchen Leader/Hand Wash\n            middleY = drawStationBox(middleX, middleY, stationWidth, 25, \"Kitchen Leader/Hand Wash\", [\n                \"Staff\"\n            ], \"kitchen_leader\", dayPart1Assignments) + 5;\n            // Line 1\n            middleY = drawStationBox(middleX, middleY, stationWidth, 45, \"Line 1\", [\n                \"Initiator\",\n                \"Assembler\",\n                \"Finisher\"\n            ], \"line1\", dayPart1Assignments) + 5;\n            // Line 2\n            middleY = drawStationBox(middleX, middleY, stationWidth, 45, \"Line 2\", [\n                \"Initiator\",\n                \"Assembler\",\n                \"Finisher\"\n            ], \"line2\", dayPart1Assignments) + 5;\n            // Batch Grill\n            middleY = drawStationBox(middleX, middleY, stationWidth, 25, \"Batch Grill\", [\n                \"Staff\"\n            ], \"batch_grill\", dayPart1Assignments) + 5;\n            // Batch Chicken\n            middleY = drawStationBox(middleX, middleY, stationWidth, 25, \"Batch Chicken\", [\n                \"Staff\"\n            ], \"batch_chicken\", dayPart1Assignments) + 5;\n            // Backroom\n            middleY = drawStationBox(middleX, middleY, stationWidth, 25, \"Backroom\", [\n                \"Staff\"\n            ], \"backroom\", dayPart1Assignments) + 5;\n            // Fries\n            drawStationBox(middleX, middleY, stationWidth, 25, \"Fries\", [\n                \"Staff\"\n            ], \"fries\", dayPart1Assignments);\n            // Right column stations\n            let rightY = currentY;\n            const rightX = middleX + stationWidth + 10;\n            // Customer Care\n            rightY = drawStationBox(rightX, rightY, stationWidth, 25, \"Customer Care\", [\n                \"Staff\"\n            ], \"customer_care\", dayPart1Assignments) + 5;\n            // Beverage Cell\n            rightY = drawStationBox(rightX, rightY, stationWidth, 45, \"Beverage Cell\", [\n                \"Soft Drinks\",\n                \"Shakes\",\n                \"Hot Drinks\"\n            ], \"beverage_cell\", dayPart1Assignments) + 5;\n            // Breaks\n            rightY = drawStationBox(rightX, rightY, stationWidth, 35, \"Breaks\", [\n                \"Kitchen\",\n                \"Front\"\n            ], \"breaks\", dayPart1Assignments) + 5;\n            // DIVE\n            rightY = drawStationBox(rightX, rightY, stationWidth, 60, \"DIVE\", [\n                \"11:00\",\n                \"15:00\",\n                \"19:00\",\n                \"CLOSE\"\n            ], \"dive\", dayPart1Assignments) + 5;\n            // DELIVERY\n            drawStationBox(rightX, rightY, stationWidth, 25, \"DELIVERY\", [\n                \"Staff\"\n            ], \"delivery\", dayPart1Assignments);\n            // Add footer\n            const pageNumber = assignments['Breakfast'] ? 2 : 1;\n            addFooter(pageNumber);\n        }\n        // Generate Day Part 2 page\n        if (assignments['Day Part 2']) {\n            // Add new page if Day Part 1 exists\n            if (assignments['Day Part 1']) {\n                pdf.addPage();\n            }\n            // Add header\n            addHeader('Day Part 2 Schedule', selectedDate);\n            // Add shift manager section\n            let currentY = margin + headerHeight + 10;\n            const dayPart2Assignments = assignments['Day Part 2'] || {};\n            currentY = addShiftManagerSection(currentY, dayPart2Assignments);\n            currentY += 5;\n            // Left column stations\n            let leftY = currentY;\n            const leftX = margin;\n            const stationWidth = 85;\n            // Handheld\n            leftY = drawStationBox(leftX, leftY, stationWidth, 30, \"Handheld\", [\n                \"Staff\"\n            ], \"handheld\", dayPart2Assignments) + 5;\n            // Window 1\n            leftY = drawStationBox(leftX, leftY, stationWidth, 30, \"Window 1\", [\n                \"Order Taker\",\n                \"Cashier\"\n            ], \"window1\", dayPart2Assignments) + 5;\n            // Window 2\n            leftY = drawStationBox(leftX, leftY, stationWidth, 50, \"Window 2\", [\n                \"Presenter\",\n                \"Checker\",\n                \"Runner\",\n                \"Holds\"\n            ], \"window2\", dayPart2Assignments) + 5;\n            // Front Hand Wash\n            leftY = drawStationBox(leftX, leftY, stationWidth, 25, \"Front Hand Wash\", [\n                \"Staff\"\n            ], \"front_hand_wash\", dayPart2Assignments) + 5;\n            // Order Assembly\n            drawStationBox(leftX, leftY, stationWidth, 70, \"Order Assembly\", [\n                \"1. R/P\",\n                \"2. R/P\",\n                \"3. Delivery checker\",\n                \"4. Expeditator\",\n                \"5. Delivery Drinks\"\n            ], \"order_assembly\", dayPart2Assignments);\n            // Middle column stations\n            let middleY = currentY;\n            const middleX = leftX + stationWidth + 10;\n            // Kitchen Leader/Hand Wash\n            middleY = drawStationBox(middleX, middleY, stationWidth, 25, \"Kitchen Leader/Hand Wash\", [\n                \"Staff\"\n            ], \"kitchen_leader\", dayPart2Assignments) + 5;\n            // Line 1\n            middleY = drawStationBox(middleX, middleY, stationWidth, 45, \"Line 1\", [\n                \"Initiator\",\n                \"Assembler\",\n                \"Finisher\"\n            ], \"line1\", dayPart2Assignments) + 5;\n            // Line 2\n            middleY = drawStationBox(middleX, middleY, stationWidth, 45, \"Line 2\", [\n                \"Initiator\",\n                \"Assembler\",\n                \"Finisher\"\n            ], \"line2\", dayPart2Assignments) + 5;\n            // Batch Grill\n            middleY = drawStationBox(middleX, middleY, stationWidth, 25, \"Batch Grill\", [\n                \"Staff\"\n            ], \"batch_grill\", dayPart2Assignments) + 5;\n            // Batch Chicken\n            middleY = drawStationBox(middleX, middleY, stationWidth, 25, \"Batch Chicken\", [\n                \"Staff\"\n            ], \"batch_chicken\", dayPart2Assignments) + 5;\n            // Backroom\n            middleY = drawStationBox(middleX, middleY, stationWidth, 25, \"Backroom\", [\n                \"Staff\"\n            ], \"backroom\", dayPart2Assignments) + 5;\n            // Fries\n            drawStationBox(middleX, middleY, stationWidth, 25, \"Fries\", [\n                \"Staff\"\n            ], \"fries\", dayPart2Assignments);\n            // Right column stations\n            let rightY = currentY;\n            const rightX = middleX + stationWidth + 10;\n            // Customer Care\n            rightY = drawStationBox(rightX, rightY, stationWidth, 25, \"Customer Care\", [\n                \"Staff\"\n            ], \"customer_care\", dayPart2Assignments) + 5;\n            // Beverage Cell\n            rightY = drawStationBox(rightX, rightY, stationWidth, 45, \"Beverage Cell\", [\n                \"Soft Drinks\",\n                \"Shakes\",\n                \"Hot Drinks\"\n            ], \"beverage_cell\", dayPart2Assignments) + 5;\n            // Breaks\n            rightY = drawStationBox(rightX, rightY, stationWidth, 35, \"Breaks\", [\n                \"Kitchen\",\n                \"Front\"\n            ], \"breaks\", dayPart2Assignments) + 5;\n            // DIVE\n            rightY = drawStationBox(rightX, rightY, stationWidth, 60, \"DIVE\", [\n                \"11:00\",\n                \"15:00\",\n                \"19:00\",\n                \"CLOSE\"\n            ], \"dive\", dayPart2Assignments) + 5;\n            // DELIVERY\n            drawStationBox(rightX, rightY, stationWidth, 25, \"DELIVERY\", [\n                \"Staff\"\n            ], \"delivery\", dayPart2Assignments);\n            // Add footer with correct page number\n            let pageNumber = 1;\n            if (assignments['Breakfast']) pageNumber++;\n            if (assignments['Day Part 1']) pageNumber++;\n            addFooter(pageNumber);\n        }\n        // Save the PDF\n        const fileName = \"McDonald's Schedule - \".concat(selectedDate.toLocaleDateString(), \".pdf\");\n        pdf.save(fileName);\n    } catch (error) {\n        console.error('Error generating PDF:', error);\n        throw new Error('Failed to generate PDF. Please try again.');\n    }\n};\n// Export print function for HTML version\nconst printSchedule = (assignments, employees, layouts, selectedDate)=>{\n    try {\n        // Create HTML structure that matches the paper forms\n        let htmlContent = '';\n        // Generate Breakfast page HTML (first page)\n        if (assignments['Breakfast']) {\n            const breakfastAssignments = assignments['Breakfast'] || {};\n            htmlContent += '\\n        <div class=\"page\">\\n          <div class=\"page-header\">\\n            <h1>McDonald\\'s Station/Task Schedule</h1>\\n            <div class=\"header-info\">\\n              <span class=\"schedule-name\">Breakfast Schedule</span>\\n              <span class=\"schedule-date\">Date: '.concat(selectedDate.toLocaleDateString(), \"</span>\\n              <span>Generated: \").concat(new Date().toLocaleString(), '</span>\\n            </div>\\n          </div>\\n          <div class=\"shift-manager-section\">\\n            ').concat((()=>{\n                var _breakfastAssignments_shift_manager;\n                const shiftManagerAssignments = (breakfastAssignments === null || breakfastAssignments === void 0 ? void 0 : (_breakfastAssignments_shift_manager = breakfastAssignments['shift_manager']) === null || _breakfastAssignments_shift_manager === void 0 ? void 0 : _breakfastAssignments_shift_manager['Manager on Duty']) || [];\n                if (shiftManagerAssignments.length > 0) {\n                    const managerName = shiftManagerAssignments[0];\n                    const manager = employees.find((emp)=>emp.name === managerName);\n                    const minorIndicator = (manager === null || manager === void 0 ? void 0 : manager.minor) ? ' (Minor)' : '';\n                    const shiftTimes = (manager === null || manager === void 0 ? void 0 : manager.shiftStart) && (manager === null || manager === void 0 ? void 0 : manager.shiftEnd) ? \" (\".concat(manager.shiftStart, \"-\").concat(manager.shiftEnd, \")\") : '';\n                    return \"<span>Shift Manager: \".concat(managerName).concat(shiftTimes).concat(minorIndicator, \"</span>\");\n                } else {\n                    return \"<span>Shift Manager: ________________</span>\";\n                }\n            })(), '\\n          </div>\\n          <div class=\"content\">\\n            <div class=\"column\">\\n              ').concat(generateStationHTML(\"Handheld\", [\n                \"Staff\"\n            ], \"handheld\", breakfastAssignments, employees), \"\\n              \").concat(generateStationHTML(\"Window 1\", [\n                \"Order Taker\",\n                \"Cashier\"\n            ], \"window1\", breakfastAssignments, employees), \"\\n              \").concat(generateStationHTML(\"Window 2\", [\n                \"Presenter\",\n                \"Checker\",\n                \"Runner\",\n                \"Holds\"\n            ], \"window2\", breakfastAssignments, employees), \"\\n              \").concat(generateStationHTML(\"Front Hand Wash\", [\n                \"Staff\"\n            ], \"front_hand_wash\", breakfastAssignments, employees), \"\\n              \").concat(generateStationHTML(\"Order Assembly\", [\n                \"1. R/P\",\n                \"2. R/P\",\n                \"3. Delivery checker\",\n                \"4. Expeditator\",\n                \"5. Delivery Drinks\"\n            ], \"order_assembly\", breakfastAssignments, employees), '\\n            </div>\\n            <div class=\"column\">\\n              ').concat(generateStationHTML(\"Kitchen Leader/Hand Wash\", [\n                \"Staff\"\n            ], \"kitchen_leader\", breakfastAssignments, employees), \"\\n              \").concat(generateStationHTML(\"Line 1\", [\n                \"Screen\",\n                \"Rolls\"\n            ], \"line1\", breakfastAssignments, employees), \"\\n              \").concat(generateStationHTML(\"Line 2\", [\n                \"Screen\",\n                \"Rolls\"\n            ], \"line2\", breakfastAssignments, employees), \"\\n              \").concat(generateStationHTML(\"Batch\", [\n                \"Muffins\",\n                \"Sausage\",\n                \"Eggs\"\n            ], \"batch\", breakfastAssignments, employees), \"\\n              \").concat(generateStationHTML(\"Oven\", [\n                \"Staff\"\n            ], \"oven\", breakfastAssignments, employees), \"\\n              \").concat(generateStationHTML(\"Backroom/Change Over\", [\n                \"Staff\"\n            ], \"backroom\", breakfastAssignments, employees), \"\\n              \").concat(generateStationHTML(\"Hash browns\", [\n                \"Staff\"\n            ], \"hash_browns\", breakfastAssignments, employees), '\\n            </div>\\n            <div class=\"column\">\\n              ').concat(generateStationHTML(\"Customer Care\", [\n                \"Staff\"\n            ], \"customer_care\", breakfastAssignments, employees), \"\\n              \").concat(generateStationHTML(\"Beverage Cell\", [\n                \"Soft Drinks\",\n                \"Shakes\",\n                \"Hot Drinks\"\n            ], \"beverage_cell\", breakfastAssignments, employees), \"\\n              \").concat(generateStationHTML(\"Breaks\", [\n                \"Kitchen\",\n                \"Front\"\n            ], \"breaks\", breakfastAssignments, employees), \"\\n              \").concat(generateStationHTML(\"DIVE\", [\n                \"09:00\",\n                \"11:00\"\n            ], \"dive\", breakfastAssignments, employees), \"\\n              \").concat(generateDFSHTML(), '\\n            </div>\\n          </div>\\n          <div class=\"page-footer\">\\n            <span>Printed by: McDonald\\'s Task Scheduler - Burgernomics</span>\\n            <span>Page 1</span>\\n          </div>\\n        </div>\\n      ');\n        }\n        // Generate Day Part 1 page HTML\n        if (assignments['Day Part 1']) {\n            const dayPart1Assignments = assignments['Day Part 1'] || {};\n            htmlContent += '\\n        <div class=\"page\">\\n          <div class=\"page-header\">\\n            <h1>McDonald\\'s Station/Task Schedule</h1>\\n            <div class=\"header-info\">\\n              <span class=\"schedule-name\">Day Part 1 Schedule</span>\\n              <span class=\"schedule-date\">Date: '.concat(selectedDate.toLocaleDateString(), \"</span>\\n              <span>Generated: \").concat(new Date().toLocaleString(), '</span>\\n            </div>\\n          </div>\\n          <div class=\"shift-manager-section\">\\n            ').concat((()=>{\n                var _dayPart1Assignments_shift_manager;\n                const shiftManagerAssignments = (dayPart1Assignments === null || dayPart1Assignments === void 0 ? void 0 : (_dayPart1Assignments_shift_manager = dayPart1Assignments['shift_manager']) === null || _dayPart1Assignments_shift_manager === void 0 ? void 0 : _dayPart1Assignments_shift_manager['Manager on Duty']) || [];\n                if (shiftManagerAssignments.length > 0) {\n                    const managerName = shiftManagerAssignments[0];\n                    const manager = employees.find((emp)=>emp.name === managerName);\n                    const minorIndicator = (manager === null || manager === void 0 ? void 0 : manager.minor) ? ' (Minor)' : '';\n                    const shiftTimes = (manager === null || manager === void 0 ? void 0 : manager.shiftStart) && (manager === null || manager === void 0 ? void 0 : manager.shiftEnd) ? \" (\".concat(manager.shiftStart, \"-\").concat(manager.shiftEnd, \")\") : '';\n                    return \"<span>Shift Manager: \".concat(managerName).concat(shiftTimes).concat(minorIndicator, \"</span>\");\n                } else {\n                    return \"<span>Shift Manager: ________________</span>\";\n                }\n            })(), '\\n          </div>\\n          <div class=\"content\">\\n            <div class=\"column\">\\n              ').concat(generateStationHTML(\"Handheld\", [\n                \"Staff\"\n            ], \"handheld\", dayPart1Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Window 1\", [\n                \"Order Taker\",\n                \"Cashier\"\n            ], \"window1\", dayPart1Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Window 2\", [\n                \"Presenter\",\n                \"Checker\",\n                \"Runner\",\n                \"Holds\"\n            ], \"window2\", dayPart1Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Front Hand Wash\", [\n                \"Staff\"\n            ], \"front_hand_wash\", dayPart1Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Order Assembly\", [\n                \"1. R/P\",\n                \"2. R/P\",\n                \"3. Delivery checker\",\n                \"4. Expeditator\",\n                \"5. Delivery Drinks\"\n            ], \"order_assembly\", dayPart1Assignments, employees), '\\n            </div>\\n            <div class=\"column\">\\n              ').concat(generateStationHTML(\"Kitchen Leader/Hand Wash\", [\n                \"Staff\"\n            ], \"kitchen_leader\", dayPart1Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Line 1\", [\n                \"Initiator\",\n                \"Assembler\",\n                \"Finisher\"\n            ], \"line1\", dayPart1Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Line 2\", [\n                \"Initiator\",\n                \"Assembler\",\n                \"Finisher\"\n            ], \"line2\", dayPart1Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Batch Grill\", [\n                \"Staff\"\n            ], \"batch_grill\", dayPart1Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Batch Chicken\", [\n                \"Staff\"\n            ], \"batch_chicken\", dayPart1Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Backroom\", [\n                \"Staff\"\n            ], \"backroom\", dayPart1Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Fries\", [\n                \"Staff\"\n            ], \"fries\", dayPart1Assignments, employees), '\\n            </div>\\n            <div class=\"column\">\\n              ').concat(generateStationHTML(\"Customer Care\", [\n                \"Staff\"\n            ], \"customer_care\", dayPart1Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Beverage Cell\", [\n                \"Soft Drinks\",\n                \"Shakes\",\n                \"Hot Drinks\"\n            ], \"beverage_cell\", dayPart1Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Breaks\", [\n                \"Kitchen\",\n                \"Front\"\n            ], \"breaks\", dayPart1Assignments, employees), \"\\n              \").concat(generateStationHTML(\"DIVE\", [\n                \"11:00\",\n                \"15:00\",\n                \"19:00\",\n                \"CLOSE\"\n            ], \"dive\", dayPart1Assignments, employees), \"\\n              \").concat(generateStationHTML(\"DELIVERY\", [\n                \"Staff\"\n            ], \"delivery\", dayPart1Assignments, employees), '\\n            </div>\\n          </div>\\n          <div class=\"page-footer\">\\n            <span>Printed by: McDonald\\'s Task Scheduler - Burgernomics</span>\\n            <span>Page ').concat(assignments['Breakfast'] ? '2' : '1', \"</span>\\n          </div>\\n        </div>\\n      \");\n        }\n        // Generate Day Part 2 page HTML\n        if (assignments['Day Part 2']) {\n            const dayPart2Assignments = assignments['Day Part 2'] || {};\n            htmlContent += '\\n        <div class=\"page\">\\n          <div class=\"page-header\">\\n            <h1>McDonald\\'s Station/Task Schedule</h1>\\n            <div class=\"header-info\">\\n              <span class=\"schedule-name\">Day Part 2 Schedule</span>\\n              <span class=\"schedule-date\">Date: '.concat(selectedDate.toLocaleDateString(), \"</span>\\n              <span>Generated: \").concat(new Date().toLocaleString(), '</span>\\n            </div>\\n          </div>\\n          <div class=\"shift-manager-section\">\\n            ').concat((()=>{\n                var _dayPart2Assignments_shift_manager;\n                const shiftManagerAssignments = (dayPart2Assignments === null || dayPart2Assignments === void 0 ? void 0 : (_dayPart2Assignments_shift_manager = dayPart2Assignments['shift_manager']) === null || _dayPart2Assignments_shift_manager === void 0 ? void 0 : _dayPart2Assignments_shift_manager['Manager on Duty']) || [];\n                if (shiftManagerAssignments.length > 0) {\n                    const managerName = shiftManagerAssignments[0];\n                    const manager = employees.find((emp)=>emp.name === managerName);\n                    const minorIndicator = (manager === null || manager === void 0 ? void 0 : manager.minor) ? ' (Minor)' : '';\n                    const shiftTimes = (manager === null || manager === void 0 ? void 0 : manager.shiftStart) && (manager === null || manager === void 0 ? void 0 : manager.shiftEnd) ? \" (\".concat(manager.shiftStart, \"-\").concat(manager.shiftEnd, \")\") : '';\n                    return \"<span>Shift Manager: \".concat(managerName).concat(shiftTimes).concat(minorIndicator, \"</span>\");\n                } else {\n                    return \"<span>Shift Manager: ________________</span>\";\n                }\n            })(), '\\n          </div>\\n          <div class=\"content\">\\n            <div class=\"column\">\\n              ').concat(generateStationHTML(\"Handheld\", [\n                \"Staff\"\n            ], \"handheld\", dayPart2Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Window 1\", [\n                \"Order Taker\",\n                \"Cashier\"\n            ], \"window1\", dayPart2Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Window 2\", [\n                \"Presenter\",\n                \"Checker\",\n                \"Runner\",\n                \"Holds\"\n            ], \"window2\", dayPart2Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Front Hand Wash\", [\n                \"Staff\"\n            ], \"front_hand_wash\", dayPart2Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Order Assembly\", [\n                \"1. R/P\",\n                \"2. R/P\",\n                \"3. Delivery checker\",\n                \"4. Expeditator\",\n                \"5. Delivery Drinks\"\n            ], \"order_assembly\", dayPart2Assignments, employees), '\\n            </div>\\n            <div class=\"column\">\\n              ').concat(generateStationHTML(\"Kitchen Leader/Hand Wash\", [\n                \"Staff\"\n            ], \"kitchen_leader\", dayPart2Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Line 1\", [\n                \"Initiator\",\n                \"Assembler\",\n                \"Finisher\"\n            ], \"line1\", dayPart2Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Line 2\", [\n                \"Initiator\",\n                \"Assembler\",\n                \"Finisher\"\n            ], \"line2\", dayPart2Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Batch Grill\", [\n                \"Staff\"\n            ], \"batch_grill\", dayPart2Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Batch Chicken\", [\n                \"Staff\"\n            ], \"batch_chicken\", dayPart2Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Backroom\", [\n                \"Staff\"\n            ], \"backroom\", dayPart2Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Fries\", [\n                \"Staff\"\n            ], \"fries\", dayPart2Assignments, employees), '\\n            </div>\\n            <div class=\"column\">\\n              ').concat(generateStationHTML(\"Customer Care\", [\n                \"Staff\"\n            ], \"customer_care\", dayPart2Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Beverage Cell\", [\n                \"Soft Drinks\",\n                \"Shakes\",\n                \"Hot Drinks\"\n            ], \"beverage_cell\", dayPart2Assignments, employees), \"\\n              \").concat(generateStationHTML(\"Breaks\", [\n                \"Kitchen\",\n                \"Front\"\n            ], \"breaks\", dayPart2Assignments, employees), \"\\n              \").concat(generateStationHTML(\"DIVE\", [\n                \"11:00\",\n                \"15:00\",\n                \"19:00\",\n                \"CLOSE\"\n            ], \"dive\", dayPart2Assignments, employees), \"\\n              \").concat(generateStationHTML(\"DELIVERY\", [\n                \"Staff\"\n            ], \"delivery\", dayPart2Assignments, employees), '\\n            </div>\\n          </div>\\n          <div class=\"page-footer\">\\n            <span>Printed by: McDonald\\'s Task Scheduler - Burgernomics</span>\\n            <span>Page ').concat(assignments['Day Part 1'] ? '2' : '1', \"</span>\\n          </div>\\n        </div>\\n      \");\n        }\n        // Create a new window for printing\n        const printWindow = window.open('', '_blank');\n        if (!printWindow) {\n            throw new Error('Unable to open print dialog. Please check if pop-ups are blocked.');\n        }\n        printWindow.document.write(\"\\n      <html>\\n        <head>\\n          <title>McDonald's Schedule - \".concat(selectedDate.toLocaleDateString(), \"</title>\\n          <style>\\n            @media print { \\n              @page { \\n                size: landscape; \\n                margin: 0.5in; \\n              } \\n            }\\n            body { \\n              font-family: Arial, sans-serif; \\n              margin: 0; \\n              padding: 0; \\n              background: white;\\n            }\\n            .page { \\n              width: 100%; \\n              min-height: 100vh; \\n              page-break-after: always; \\n              display: flex; \\n              flex-direction: column;\\n              box-sizing: border-box;\\n              padding: 15px;\\n            }\\n            .page:last-child { \\n              page-break-after: avoid; \\n            }\\n            .page-header {\\n              border-bottom: 2px solid black;\\n              margin-bottom: 15px;\\n              padding-bottom: 10px;\\n            }\\n            .page-header h1 {\\n              margin: 0;\\n              font-size: 20px;\\n              font-weight: bold;\\n              color: black;\\n            }\\n            .header-info {\\n              display: flex;\\n              justify-content: space-between;\\n              font-size: 12px;\\n              margin-top: 8px;\\n            }\\n            .schedule-name {\\n              font-size: 16px !important;\\n              font-weight: bold !important;\\n              color: black !important;\\n            }\\n            .schedule-date {\\n              font-size: 14px !important;\\n              font-weight: bold !important;\\n              color: black !important;\\n            }\\n            .shift-manager-section {\\n              display: flex;\\n              justify-content: space-between;\\n              font-weight: bold;\\n              font-size: 14px;\\n              margin-bottom: 15px;\\n              padding: 5px 0;\\n              border-bottom: 1px solid #000;\\n            }\\n            .page-footer {\\n              border-top: 1px solid black;\\n              margin-top: auto;\\n              padding-top: 10px;\\n              display: flex;\\n              justify-content: space-between;\\n              font-size: 10px;\\n            }\\n            .header { \\n              display: flex; \\n              justify-content: space-between; \\n              font-weight: bold; \\n              font-size: 14px; \\n              margin-bottom: 10px; \\n              padding: 0 10px;\\n            }\\n            .shift-manager { \\n              font-weight: bold; \\n              margin-bottom: 10px; \\n              padding: 0 10px;\\n            }\\n            .content { \\n              display: flex; \\n              justify-content: space-between; \\n              flex: 1; \\n              padding: 0 10px;\\n            }\\n            .column { \\n              width: 32%; \\n            }\\n            .station { \\n              margin-bottom: 10px; \\n              border: 1px solid black; \\n              break-inside: avoid;\\n            }\\n            .station-title { \\n              background: #f0f0f0; \\n              padding: 4px; \\n              text-align: center; \\n              font-weight: bold; \\n              border-bottom: 1px solid black; \\n              font-size: 12px;\\n            }\\n            .station-column { \\n              border-bottom: 1px solid black; \\n            }\\n            .station-column:last-child {\\n              border-bottom: none;\\n            }\\n            .station-column-inline {\\n              border-bottom: 1px solid black;\\n              padding: 4px;\\n              display: flex;\\n              align-items: center;\\n            }\\n            .station-column-inline:last-child {\\n              border-bottom: none;\\n            }\\n            .column-label {\\n              font-weight: bold;\\n              font-size: 14px;\\n              margin-right: 8px;\\n              flex-shrink: 0;\\n              color: black;\\n            }\\n            .column-employees {\\n              font-size: 13px;\\n              font-weight: Regular;\\n              flex: 1;\\n              color: black;\\n            }\\n            .column-title { \\n              padding: 2px 4px; \\n              font-size: 12px; \\n              background: #f8f8f8; \\n              border-bottom: 1px solid black;\\n            }\\n            .column-content { \\n              min-height: 20px; \\n              padding: 2px 4px; \\n              font-size: 16px;\\n              font-weight: bold;\\n              line-height: 1.4;\\n              color: black;\\n            }\\n            .dfs-table { \\n              width: 100%; \\n              border-collapse: collapse; \\n            }\\n            .dfs-table td, .dfs-table th { \\n              border: 1px solid black; \\n              padding: 4px; \\n              text-align: center; \\n              font-size: 12px; \\n            }\\n            .dfs-table th {\\n              background: #f0f0f0;\\n              font-weight: bold;\\n            }\\n          </style>\\n        </head>\\n        <body>\\n          \").concat(htmlContent, \"\\n        </body>\\n      </html>\\n    \"));\n        printWindow.document.close();\n        printWindow.focus();\n        // Add a small delay to ensure the content is loaded before printing\n        setTimeout(()=>{\n            printWindow.print();\n        }, 500);\n    } catch (error) {\n        console.error('Error opening print dialog:', error);\n        throw new Error('Error opening print dialog. Please try again.');\n    }\n};\n// Helper function to generate station HTML\nconst generateStationHTML = (title, columns, stationId, assignments, employees)=>{\n    const columnsHTML = columns.map((column)=>{\n        var _assignments_stationId;\n        const assignedEmployees = (assignments === null || assignments === void 0 ? void 0 : (_assignments_stationId = assignments[stationId]) === null || _assignments_stationId === void 0 ? void 0 : _assignments_stationId[column]) || [];\n        const employeesHTML = assignedEmployees.map((employeeName)=>{\n            const employee = employees.find((emp)=>emp.name === employeeName);\n            let text = (employee === null || employee === void 0 ? void 0 : employee.minor) ? \"\".concat(employeeName, \" (M)\") : employeeName;\n            // Add actual shift time if available\n            if ((employee === null || employee === void 0 ? void 0 : employee.shiftStart) && (employee === null || employee === void 0 ? void 0 : employee.shiftEnd)) {\n                text += \" - \".concat(employee.shiftStart, \"-\").concat(employee.shiftEnd);\n            } else {\n                text += ' - 6:00-14:00';\n            }\n            return text;\n        }).join(', ');\n        return '\\n      <div class=\"station-column-inline\">\\n        <span class=\"column-label\">'.concat(column, ':</span>\\n        <span class=\"column-employees\">').concat(employeesHTML, \"</span>\\n      </div>\\n    \");\n    }).join('');\n    return '\\n    <div class=\"station\">\\n      <div class=\"station-title\">'.concat(title, \"</div>\\n      \").concat(columnsHTML, \"\\n    </div>\\n  \");\n};\n// Helper function to generate DFS HTML (informational text only)\nconst generateDFSHTML = ()=>{\n    const columns = [\n        \"Item\",\n        \"Day\"\n    ];\n    const dfsItems = [\n        {\n            label: \"milk and hot chocolate discard\",\n            day: \"Monday\"\n        },\n        {\n            label: \"Shakes, sunday and topping discard\",\n            day: \"Tuesday\"\n        },\n        {\n            label: \"Oil drop temperatures recorded\",\n            day: \"Wednesday\"\n        },\n        {\n            label: \"Muffin, Toaster calibration\",\n            day: \"Friday\"\n        },\n        {\n            label: \"Egg cookers calibrations\",\n            day: \"Sunday\"\n        }\n    ];\n    const headerRow = '\\n    <tr>\\n      <th colspan=\"2\">DFS discards and Calibrations</th>\\n    </tr>\\n    <tr>\\n      '.concat(columns.map((column)=>\"<th>\".concat(column, \"</th>\")).join(''), \"\\n    </tr>\\n  \");\n    const rows = dfsItems.map((item)=>{\n        return '<tr>\\n      <td style=\"text-align: left; font-size: 12px; padding: 4px;\">'.concat(item.label, '</td>\\n      <td style=\"text-align: left; font-size: 12px; padding: 4px;\">').concat(item.day, \"</td>\\n    </tr>\");\n    }).join('');\n    return '\\n    <div class=\"station\">\\n      <table class=\"dfs-table\">\\n        '.concat(headerRow, \"\\n        \").concat(rows, \"\\n      </table>\\n    </div>\\n  \");\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/pdfUtils.ts\n"));

/***/ })

});